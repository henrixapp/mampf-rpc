error_log  /dev/stderr warn;
#daemon off;

events {
        worker_connections 1000; #TODO(henrik): find appropiate number for this
}

http {
 
 
  server {
    listen 80;
    
    access_log /dev/stdout combined;
    error_log /dev/stderr warn;
 
    root /var/www;
 
    #we won't send chunks larger than 10MB
    client_max_body_size 20m;

    
    location /auth {
        internal;
        proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Authorization $http_authorization;
      proxy_pass_header  Authorization;
      proxy_set_header Host $http_host;
      proxy_set_header X-NginX-Proxy true;
      proxy_http_version 1.1;
        proxy_pass http://mampf:3000/auth;
    }
 
    location /v1/submissions/ {
      access_by_lua_block {
        local res = ngx.location.capture("/auth")
        local uid =0 
        if res.status == 200 then
            uid =  res.body
            ngx.req.set_header("X-Forwarded-User", uid)
        end
        if uid == 0 then
              return ngx.exit(ngx.HTTP_FORBIDDEN)
         end
      }
      proxy_pass http://webdav-submission:3003/v1/submissions/;
    }
    location / {
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Authorization $http_authorization;
      proxy_pass_header  Authorization;
      proxy_set_header X-Forwarded-User $remote_user;
      proxy_set_header Host $http_host;
      proxy_set_header X-NginX-Proxy true;
      proxy_http_version 1.1;
      proxy_pass http://mampf:3000/;
   }
  }
}